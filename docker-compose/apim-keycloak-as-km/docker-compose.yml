# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '3.7'
services:
  mysql:
    image: mysql:5.7.34
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: pa55word
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./conf/mysql/scripts:/docker-entrypoint-initdb.d
      - ./conf/mysql/conf/my.cnf:/etc/mysql/my.cnf
      - ./conf/mysql/data:/var/lib/mysql
    ulimits:
      nofile:
        soft: 20000
        hard: 40000
    command: [--ssl=0]
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-uroot", "-proot"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    command: start-dev
    environment:
      KC_DB: mysql
      KC_DB_URL_HOST: mysql
      KC_DB_PASSWORD: pa55word
      KC_DB_USERNAME: keycloak
      KC_DB_SCHEMA: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
  postgres_srv:
    image: postgres:16.2
    restart: always
    command: postgres -c 'max_connections=200' && postgres -c 'shared_buffers=24MB'
    volumes:
      - ./conf/postgres/apim/scripts:/docker-entrypoint-initdb.d/
      - ./conf/postgres/data:/var/lib/postgresql/data
    environment:
      # Environment Variables expecially for Postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      APP_DB_NAME: apim_db
      APP_DB_USER: apim_u
      APP_DB_PASS: apim_p
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      start_period: 30s
      interval: 5s
      timeout: 3s
      retries: 6
    ports:
      - "5432:5432"
    expose:
      - "5432"
  api-manager:
    build: ./dockerfiles/apim
    depends_on:
      postgres_srv:
        condition: service_healthy
    volumes:
      - ./conf/apim:/home/wso2carbon/wso2-config-volume
    ports:
      - "9443:9443"
      - "8280:8280"
      - "8243:8243"
    expose:
      - "9443"
      - "8280"
      - "8243"
